<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onehammer.backend.sysmanagement.mapper.AdminMapper">
  <resultMap id="BaseResultMap" type="com.onehammer.backend.sysmanagement.domain.Admin">
    <!--@mbg.generated-->
    <!--@Table admin-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, username, `password`, icon, email, nick_name, note, create_time, login_time, 
    `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from admin
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.onehammer.backend.sysmanagement.domain.Admin" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into admin (username, `password`, icon, 
      email, nick_name, note, 
      create_time, login_time, `status`
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{loginTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.onehammer.backend.sysmanagement.domain.Admin" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.onehammer.backend.sysmanagement.domain.Admin">
    <!--@mbg.generated-->
    update admin
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.onehammer.backend.sysmanagement.domain.Admin">
    <!--@mbg.generated-->
    update admin
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectIdByUsername" resultType="int">
        select id from admin
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByUsername">
        delete from admin
        where username = #{username,jdbcType=VARCHAR}
    </delete>
    <insert id="insertRoles">
        insert into admin_role_relation
        (admin_id, role_id)
        value
        <foreach collection="roleIds" item="item" separator="," index="index">
            (#{adminId,jdbcType=BIGINT},#{item.value,jdbcType=BIGINT})
        </foreach>

    </insert>
    <delete id="deleteRolesByIds">
        <if test="roleIds != null and roleIds.size() != 0 and adminId != null">
            delete from admin_role_relation
            where
            role_id in(
            <foreach collection="roleIds" item="item" separator=",">
                #{item.value,jdbcType=BIGINT}
            </foreach>
            )
            and admin_id = #{adminId,jdbcType=BIGINT}

        </if>

    </delete>
    <select id="selectRolesById" resultType="com.onehammer.backend.sysmanagement.domain.AdminRole">
        SELECT
        admin_role.id,
        admin_role.`name`,
        admin_role.description,
        admin_role.admin_count,
        admin_role.create_time,
        admin_role.`status`,
        admin_role.sort
        FROM
        admin_role ,
        admin_role_relation
        WHERE
        admin_role.id = admin_role_relation.admin_id AND
        admin_role.id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectPermissionById" resultType="com.onehammer.backend.sysmanagement.domain.AdminPermission">
        SELECT
        admin_permission.`value`,
        admin_permission.id,
        admin_permission.pid,
        admin_permission.`name`,
        admin_permission.icon,
        admin_permission.type,
        admin_permission.uri,
        admin_permission.`status`,
        admin_permission.create_time,
        admin_permission.sort
        FROM
        admin ,
        admin_permission ,
        admin_role ,
        admin_role_relation ,
        admin_role_permission_relation
        WHERE
        admin.id = #{id,jdbcType=BIGINT} AND
        admin.id = admin_role_relation.admin_id AND
        admin_role_relation.role_id = admin_role_permission_relation.role_id AND
        admin_role_permission_relation.permission_id = admin_permission.id AND
        admin_role.id = admin_role_permission_relation.role_id

    </select>

</mapper>