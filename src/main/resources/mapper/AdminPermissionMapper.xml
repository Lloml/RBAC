<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onehammer.backend.sysmanagement.mapper.AdminPermissionMapper">
  <resultMap id="BaseResultMap" type="com.onehammer.backend.sysmanagement.domain.AdminPermission">
    <!--@mbg.generated-->
    <!--@Table admin_permission-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="uri" jdbcType="VARCHAR" property="uri" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, pid, `name`, `value`, icon, `type`, uri, `status`, create_time, sort
  </sql>
  <select id="getPermissionListByAdminName" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT
    admin_permission.`value`
    FROM
    admin ,
    admin_permission,
    admin_role_relation,
    admin_role_permission_relation
    WHERE admin.username = #{username,jdbcType=VARCHAR}
    AND admin.id = admin_role_relation.admin_id
    AND admin_role_relation.role_id = admin_role_permission_relation.role_id
    AND admin_role_permission_relation.permission_id = admin_permission.id

  </select>

    <!--auto generated by MybatisCodeHelper on 2019-10-24-->
    <update id="updateById">
        update admin_permission
        <set>
            <if test="updated.id != null">
                id = #{updated.id,jdbcType=BIGINT},
            </if>
            pid = #{updated.pid,jdbcType=BIGINT},

            name = #{updated.name,jdbcType=VARCHAR},


            value = #{updated.value,jdbcType=VARCHAR},


            icon = #{updated.icon,jdbcType=VARCHAR},

            type = #{updated.type,jdbcType=INTEGER},

            uri = #{updated.uri,jdbcType=VARCHAR},

            status = #{updated.status,jdbcType=INTEGER},

            create_time = #{updated.createTime,jdbcType=TIMESTAMP},

            sort = #{updated.sort,jdbcType=INTEGER},

        </set>
        where id=#{id,jdbcType=BIGINT}
    </update>


</mapper>