<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onehammer.backend.sysmanagement.mapper.AdminRoleMapper">
    <resultMap id="BaseResultMap" type="com.onehammer.backend.sysmanagement.domain.AdminRole">
        <!--@mbg.generated-->
        <!--@Table admin_role-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="admin_count" jdbcType="INTEGER" property="adminCount"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `name`, description, admin_count, create_time, `status`, sort
    </sql>

    <!--auto generated by MybatisCodeHelper on 2019-10-24-->
    <update id="update">
        update admin_role
        <set>
            <if test="updated.id != null">
                id = #{updated.id,jdbcType=BIGINT},
            </if>
            name = #{updated.name,jdbcType=VARCHAR},
            description = #{updated.description,jdbcType=VARCHAR},

            admin_count = #{updated.adminCount,jdbcType=INTEGER},

            create_time = #{updated.createTime,jdbcType=TIMESTAMP},

            status = #{updated.status,jdbcType=INTEGER},

            sort = #{updated.sort,jdbcType=INTEGER},
        </set>
        where id=#{updated.id,jdbcType=BIGINT}
    </update>

    <!--auto generated by MybatisCodeHelper on 2019-10-24-->
    <update id="updateById">
        update admin_role
        <set>
            <if test="updated.id != null">
                id = #{updated.id,jdbcType=BIGINT},
            </if>
            <if test="updated.name != null">
                name = #{updated.name,jdbcType=VARCHAR},
            </if>
            <if test="updated.description != null">
                description = #{updated.description,jdbcType=VARCHAR},
            </if>
            <if test="updated.adminCount != null">
                admin_count = #{updated.adminCount,jdbcType=INTEGER},
            </if>
            <if test="updated.createTime != null">
                create_time = #{updated.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updated.status != null">
                status = #{updated.status,jdbcType=INTEGER},
            </if>
            <if test="updated.sort != null">
                sort = #{updated.sort,jdbcType=INTEGER},
            </if>
        </set>
        where id=#{updated.id,jdbcType=BIGINT}
    </update>
    <insert id="insertPermissions">
        insert into admin_role_permission_relation
        (role_id, permission_id) VALUE
        <foreach collection="permissionIds" item="item" separator="," index="index">
            (#{roleId,jdbcType=BIGINT},#{item.value,jdbcType=BIGINT})
        </foreach>

    </insert>
    <delete id="deletePermissionsByIds">
        <if test="permissionIds != null and permissionIds.size() != 0 and roleId != null">
            delete from admin_role_permission_relation
            where role_id = #{roleId,jdbcType=BIGINT}
            and permission_id in (
            <foreach collection="permissionIds" item="item" index="index" separator=",">
                #{item.value,jdbcType=BIGINT}
            </foreach>
            )
        </if>

    </delete>
    <select id="selectPermissionsById" resultType="com.onehammer.backend.sysmanagement.domain.AdminPermission">
        SELECT
        admin_permission.id,
        admin_permission.pid,
        admin_permission.`name`,
        admin_permission.`value`,
        admin_permission.icon,
        admin_permission.type,
        admin_permission.uri,
        admin_permission.`status`,
        admin_permission.create_time,
        admin_permission.sort
        FROM
        admin_role ,
        admin_role_permission_relation ,
        admin_permission
        WHERE
        admin_role.id = admin_role_permission_relation.role_id AND
        admin_role_permission_relation.permission_id = admin_permission.id AND
        admin_role.id = #{id,jdbcType=BIGINT}
    </select>


</mapper>